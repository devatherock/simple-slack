docker_auth: &docker_auth
  auth:
    username: $DOCKER_USERNAME
    password: $DOCKER_PASSWORD

vm_executor_image: &vm_executor_image
  machine:
    image: ubuntu-2204:2023.04.2    

workspace: &workspace
  at: ~/simple-slack

work_directory: &work_directory
  working_directory: ~/simple-slack

resource_class: &resource_class
  resource_class: small

release_filter: &release_filter
  filters:
    branches:
      only: non-existent-branch
    tags:
      only: /^v[0-9\.]+$/

pr_filter: &pr_filter
  filters:
    branches:
      ignore: master

orbs:
  templates: devatherock/circleci-templates@0.5.0

parameters:
  go_version:
    type: string
    default: "1.20"
  repo_name:
    type: string
    default: "simple-slack"

executors:
  docker-executor:
    docker:
    - image: cimg/go:<< pipeline.parameters.go_version >>
      <<: *docker_auth
    <<: *resource_class
    <<: *work_directory
  machine-executor:
    <<: *vm_executor_image
    resource_class: medium
    <<: *work_directory
  arm-executor:
    <<: *vm_executor_image
    resource_class: arm.medium
    <<: *work_directory

version: 2.1
jobs:
  test:
    executor: docker-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-pkg-cache-{{ checksum "go.mod" }}
            - v1-pkg-cache
      - run: make check

  fast_integration_test:
    parameters:
      image_type:
        type: string  
    executor: arm-executor
    steps:
      - checkout
      - run: |
          make docker-build-<< parameters.image_type >> integration-test-<< parameters.image_type >> skip_pull=true

  build:
    executor: docker-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-pkg-cache-{{ checksum "go.mod" }}
            - v1-pkg-cache
      - run: |
          make coveralls
          make build-all
      - save_cache:
          paths:
            - "/home/circleci/go/pkg"
          key: v1-pkg-cache-{{ checksum "go.mod" }}

  publish:
    parameters:
      command_args:
        type: string
      docker_image:
        type: string  
    executor: docker-executor
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          <<: *workspace
      - run: |
          TAG=${CIRCLE_SHA1:0:8}
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          docker buildx create --name rockbuilder \
            --driver docker-container --use --bootstrap
          docker buildx build \
              --platform linux/amd64,linux/arm64 \
              --push \
              --build-arg GO_VERSION=<< pipeline.parameters.go_version >> \
              -t devatherock/<< parameters.docker_image >>:$TAG \
              -t devatherock/<< parameters.docker_image >>:latest \
              << parameters.command_args >>

  integration_test:
    parameters:
      command_args:
        type: string    
      runner:
        type: executor
    executor: << parameters.runner >>
    steps:
      - checkout
      - run: |
          make << parameters.command_args >>

  release:
    executor: docker-executor
    parameters:
      docker_image:
        type: string
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          <<: *workspace
      - run: |
          TAG=${CIRCLE_TAG#v}
          DEV_TAG=${CIRCLE_SHA1:0:8}
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          docker buildx create --name rockbuilder \
            --driver docker-container --use --bootstrap
          docker buildx imagetools create \
            -t devatherock/<< parameters.docker_image >>:$TAG \
            devatherock/<< parameters.docker_image >>:$DEV_TAG

workflows:
  version: 2.1
  build_publish:
    jobs:
      - build:
          context:
            - docker-credentials
          filters:
            branches:
              only: master
      - publish:
          name: publish_api
          context:
            - docker-credentials
          command_args: '-f build/Api.Dockerfile .'
          docker_image: 'simple-slack-api'  
          requires:
            - build
      - publish:
          name: publish_plugin
          context:
            - docker-credentials
          command_args: '-f build/Plugin.Dockerfile .'
          docker_image: 'simple-slack'  
          requires:
            - build
      - templates/dockerhub_readme_update:
          name: dockerhub_readme_api
          context:
            - docker-credentials
            - dockerhub-readme-credentials
          docker_image: 'simple-slack-api'
          image_description: 'API to post messages to slack, waiting for a CircleCI workflow to complete if required'
          work_dir: '~/<< pipeline.parameters.repo_name >>'  
          requires:
            - publish_api           
      - templates/dockerhub_readme_update:
          name: dockerhub_readme_plugin
          context:
            - docker-credentials
            - dockerhub-readme-credentials
          docker_image: '<< pipeline.parameters.repo_name >>'
          image_description: 'CI plugin to post messages to slack'
          work_dir: '~/<< pipeline.parameters.repo_name >>'  
          requires:
            - publish_plugin
      - integration_test:
          name: integration_test_plugin_amd
          context:
            - docker-credentials
          command_args: 'integration-test-plugin'
          runner: machine-executor
          requires:
            - publish_plugin
      - integration_test:
          name: integration_test_plugin_arm
          context:
            - docker-credentials
          command_args: 'integration-test-plugin'  
          runner: arm-executor
          requires:
            - dockerhub_readme_plugin
      - templates/slack:
          name: notify
          context:
            - docker-credentials
            - slack-webhook
          requires:
            - integration_test_plugin_amd
            - integration_test_plugin_arm

  release_api:
    jobs:
      - release:
          name: release_api
          context:
            - docker-credentials
          docker_image: simple-slack-api
          <<: *release_filter
      - templates/slack:
          name: notify
          context:
            - docker-credentials
            - slack-webhook
          <<: *release_filter
          requires:
            - release_api

  release_plugin:
    jobs:
      - release:
          name: release_plugin
          context:
            - docker-credentials
          docker_image: simple-slack
          <<: *release_filter
      - templates/slack:
          name: notify
          context:
            - docker-credentials
            - slack-webhook
          <<: *release_filter
          requires:
            - release_plugin

  pr_check:
    jobs:
      - templates/changelog_updater:
          name: changelog_updater
          context:
            - docker-credentials
            - changelog-updater-credentials
          <<: *pr_filter
      - test:
          context:
            - docker-credentials
          requires:
            - changelog_updater
      - fast_integration_test:
          name: fast_integration_test_plugin
          context:
            - docker-credentials
          image_type: 'plugin'  
          requires:
            - test
